DNS
DNS protocol protect against forged responses through random transaction ID(txid)
Root Server System(RSS)->key challenge: DOS
-DOS attack on network bandwidth->solution:localize attacks and limits their effects close to the source of traffic; hundreds of root servers deployed across ISPs worldwide; RSS is heavily anycasted(send to other nodes)
-DOS attack on memory or CPU->solution: replication of RSS among multiple operators and machines; system monitoring
-DNS enhancement: DoH, DoT->solution: additional overhead for crypto operations

Attack pattern
-cache poisoning: force name server expensive lookup or DOS to delay reply. reply faster than nameserver
forced lookup: client-server request and response round trip
multiple replies: try lots of random txid(no wait)
multiple domain: [1.100].www.bank.com, 100 races, TTL only stops race for one domain name
what prevents cache poisoning?
-DNS txid->brute force try total 16 bit 2^16
-DNS TTL->not that long in reality
-TCP/IP source port(responce must match source IP port)->UDP stateless and can be spoofed, only 2^16=65536 ports

cache poisoning-SADDNS
when a DNS server issues a query, its source port is open to public.
scan port using UDP to identify the open port, ICMP port to decide(open->drop, closed->reject)
once port number is known, try txid brute force
how to overcome ICMP rate limiting?
-use multiple source IPs
-infer by probe ICMP rate limit after scan with fake ip
how to defend against SADDNS?
-DNSSEC
-0x20 encoding (increase entrophy to query id)
-disable icmp port unreachable
-randomize icmp global rate limit

Attack Domain Registrar
hack and brute force pwd, then change registration entries and lock owner

Attack Network and Local configuration
-manipulate DNS configuration settings
-have target point to attackers nameserver
for Wide Area Network(WAN): scan ISP networks, identify vulnerable routers or weak/default pwd.
for Local Area Network(LAN): attack client router or DHCP server directly, attack DHCP exchange in local network
for local host: manipulate DNS local host settings(malware), disable anti-virus link

Problems with DNS
-default dns queries and response are sent in plain text via UDP
-DNS protocol has no integrity or authentication assurance

DNSSEC
-verify the identity of DNS root and authoritative nameservers->signed by every dns server(parent signs children's public key)
-does not encrypt communications
pros: origin authentication, integrity protection, stop DNS spoofing attack
cons: high complexity, low performance(asymmetric), no confidentiality protection, large response message, slow adoption

DoT/DoH
-encrypt DNS queries

DoT
-specific port, filtered by firewall/attacker, 

DoH
-use standard HTTPS port, no filtering, easy integration, camouflaged within other HTTPS traffic
-problems for enterprises: create mechanism to overwrite centrally-imposed DNS settings(hard to manage);n employees use DoH to bypass DNS-based traffic filtering(easy to bypass); attackers bypass organizational control(easy to attack)
